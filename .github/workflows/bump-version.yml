# This is a basic workflow that is manually triggered

name: Bump version

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        # Friendly description to be shown in the UI instead of 'name'
        description: "Semver type of new version (major / minor / patch)"
        # Input has to be provided for the workflow to run
        required: true
        type: choice
        options:
          - Patch
          - Minor
          - Major

env:
  MANIFEST_PATH: "${{ github.workspace }}/src/TcPrjMgmt/TcPrjMgmt.psd1"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "bump-version"
  bump-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check out the content (source branch).  Use a deploy key so that
      # when we push changes, it will trigger the release workflow
      # run that runs on: tag. (Using the GitHub token would
      # not run the workflow to prevent infinite recursion.)
      - name: Check out source
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Setup Git
        run: |
          git config user.name 'Giang Nguyen'
          git config user.email 'nhgiangvt117@gmail.com'

      - name: Bump version
        shell: pwsh
        run: |
          Install-Module -Name BuildHelpers -RequiredVersion 2.0.9 -Force -Confirm:$false
          $oldVersion = Get-Metadata $env:MANIFEST_PATH
          Step-ModuleVersion -Path $env:MANIFEST_PATH -By ${{ github.event.inputs.version }}
          $newVersion = Get-Metadata $env:MANIFEST_PATH
          git add $env:MANIFEST_PATH
          git commit -m "Bumped version: $($oldVersion) â†’ $($newVersion)"

      - name: Push latest version
        shell: pwsh
        run: |
          $version = Get-Metadata $env:MANIFEST_PATH
          git tag "v$($version)"
          git push origin main
          git push --tags